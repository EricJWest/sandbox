import bpy
import numpy as np

# time interval
time = np.linspace(0,250,250)

# orbital parameters
orbitFreq = 2*np.pi*0.025
radius = 5.0

# rotational dynamics
precessFreq = 2*np.pi*0.1
precessAmp = 0.2
spinFreq = 2*np.pi*50

# add cube
bpy.ops.mesh.primitive_cube_add(location=(radius,0,0))
cube = bpy.context.active_object

# make frames
frame_num = 0
for t in time:
    bpy.context.scene.frame_set(frame_num)
    wobble = precessAmp*np.cos(precessFreq*t)
    orientation = spinFreq*t
    cube.rotation_euler = ((0,wobble,orientation))
    cube.location=(radius*np.cos(orbitFreq*t),radius*np.sin(orbitFreq*t),0)
    cube.keyframe_insert(data_path="rotation_euler")
    cube.keyframe_insert(data_path="location")
    frame_num += 1
